@import "_mixins";
@import "_layout";
@fadeSize: @padding-large;

.bg-home {
  &:extend(.bg-image-gradient all);
  .background-image('home.jpg');
}

.bg-fade-top {
  mask-image: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 1) @fadeSize, rgba(0, 0, 0, 1));
}

.bg-fade-top-bottom {
  mask-image: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 1) @fadeSize, rgba(0, 0, 0, 1) calc(100% - @fadeSize), transparent);
}

.bg-fade-bottom {
  mask-image: linear-gradient(to top, transparent, rgba(0, 0, 0, 1) @fadeSize, rgba(0, 0, 0, 1));
}

.bg-fade-to-top {
  mask-image: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 1) 66%, rgba(0, 0, 0, 1));
}

// Overlay gradient for use with Text over image background
.bg-image-gradient {
  &:extend(.bg-grey all); // background color when loading image

  &:before {
    &:extend(.position-fill);
    content: '';
    background-image: linear-gradient(0deg, transparent, rgba(255, 255, 255, 0.9));
  }

  &.inverted,
  .inverted & {
    &:before {
      background-image: linear-gradient(0deg, transparent, rgba(0, 0, 0, 0.35) 35%, rgba(0, 0, 0, 0.7));
    }
  }
}

.bg-texture {
  &:extend(.bg-grey all);
  .background-image(@name: 'diamonds-dimmed.png'; @size: 120px 108px;);
}

.bg-texture-faded {
  &:before {
    .object();
    &:extend(.position-fill all);
    &:extend(.bg-texture all);
    &:extend(.bg-fade-to-top all);
  }
}

// To be used as inner content of container with background image
.bg-blur {
  backdrop-filter: blur(7px);
  z-index: -1; // avoid covering other absolutely positioned elements
}

.bg-fixed {
  // Disabled this for iOS, or `background-size: cover` will not work
  @media screen and (min-width: @screen-large) {
    background-attachment: fixed;
  }
}

/* Dynamic background color that works on both light and dark themes */
.bg-neutral {
  background-color: @color-bg;

  &.inverted,
  .inverted & {
    background-color: @color-bg-inverse;
  }
}

.bg-base {
  background-color: @color-bg;
}

.bg-grey {
  background-color: @color-bg-grey;
}

.bg-grey-light {
  background-color: @color-bg-grey-light;
}

.bg-grey-lighter {
  background-color: @color-bg-grey-lighter;
}

.bg-grey-lightest {
  background-color: @color-bg-grey-lightest;
}

.bg-green-light {
  background-color: @color-bg-green-light;
}

.bg-white {
  background-color: @color-bg-white;
}

.bg-black {
  background-color: @color-bg-black;
}

.bg-transparent {
  background-color: transparent;
}

.bg-highlight {
  background-color: @color-highlight;
}

.bg-shadow {
  background-color: @color-shadow;
}

.bg-shadow-dark {
  background-color: @color-shadow-dark;
}

.bg-shadow-darker {
  background-color: @color-shadow-darker;
}

.bg-image {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

// -----------------------------------------------------------------------------
// Backgrounds with Gradient Colors
// -----------------------------------------------------------------------------
@bg-gradient1: @color-shadow-lightest;
@bg-gradient2: transparent;
.bg-gradient {
  background: @bg-gradient2;
}

.bg-gradient--right {
  background-image: linear-gradient(to right, @bg-gradient1, @bg-gradient2);
}

.bg-gradient--down {
  background-image: linear-gradient(to bottom, @bg-gradient1, @bg-gradient2);
}

.bg-gradient--up {
  background-image: linear-gradient(to top, @bg-gradient2, @bg-gradient1);
}

.bg-gradient-violet-teal-light {
  background-image: linear-gradient(135deg, lighten(@color-violet-light, 27%), lighten(@color-teal-light, 45%));
}

// -----------------------------------------------------------------------------
// Borders with Gradient Colors
// -----------------------------------------------------------------------------
@borderGradientColor: @color-primary-light;
@borderGradientGrey: fade(@color-grey, 50%);
@borderGradientGreyLight: fade(@color-grey, 30%);

/* Middle Gradient panel with top and bottom borders */
.border-gradient-h {
  border-style: solid;
  border-width: @border-size 0;
  border-image: linear-gradient(to right, transparent, @borderGradientColor 33%, @borderGradientColor 67%, transparent) 1;
}

.border-gradient-h-right {
  &:extend(.border-gradient-h);
  border-image: linear-gradient(to right, @borderGradientColor, transparent) 1;
}

.border-gradient-h-grey {
  &:extend(.border-gradient-h);
  border-image: linear-gradient(to right, transparent, @borderGradientGrey 33%, @borderGradientGrey 67%, transparent) 1;
}

.border-gradient-h-grey-light {
  &:extend(.border-gradient-h);
  border-image: linear-gradient(to right, transparent, @borderGradientGreyLight 33%, @borderGradientGreyLight 67%, transparent) 1;
}

/* Middle Gradient panel with left and right borders */
.border-gradient-v {
  border-style: solid;
  border-width: 0 @border-size;
  border-image: linear-gradient(to bottom, transparent, @borderGradientColor 33%, @borderGradientColor 67%, transparent) 1;
}

.border-gradient-v-grey {
  &:extend(.border-gradient-v);
  border-image: linear-gradient(to bottom, transparent, @borderGradientGrey 33%, @borderGradientGrey 67%, transparent) 1;
}

.border-gradient-top {
  &:extend(.border-gradient-h);
  border-width: @border-size 0 0;
}

.border-gradient-top-left {
  &:extend(.border-gradient-top);
  border-image: linear-gradient(to right, transparent, @borderGradientColor) 1;
}

.border-gradient-top-left-grey {
  &:extend(.border-gradient-top);
  border-image: linear-gradient(to right, transparent, @borderGradientGrey) 1;
}

.border-gradient-top-right {
  &:extend(.border-gradient-top);
  border-image: linear-gradient(to right, @borderGradientColor, transparent) 1;
}

.border-gradient-top-right-grey {
  &:extend(.border-gradient-top);
  border-image: linear-gradient(to right, @borderGradientGrey, transparent) 1;
}

.border-gradient-top-grey {
  &:extend(.border-gradient-h-grey all);
  border-width: @border-size 0 0;
}

.border-gradient-top-grey-light {
  &:extend(.border-gradient-h-grey-light all);
  border-width: @border-size 0 0;
}

.border-gradient-bottom {
  &:extend(.border-gradient-h);
  border-width: 0 0 @border-size;
}


.border-gradient-left {
  .border-gradient-v;
  border-width: 0 0 0 @border-size;
}

.border-gradient-left-grey {
  .border-gradient-v-grey;
  border-width: 0 0 0 @border-size;
}

.border-gradient-right {
  &:extend(.border-gradient-v all);
  border-width: 0 @border-size 0 0;
}

.border-gradient-to-right {
  border-width: @border-size 0;
  border-style: solid;
  border-image: linear-gradient(to right, transparent, @borderGradientColor) 1;
}

.border-gradient-to-right-bottom {
  &:extend(.border-gradient-to-right all);
  border-width: 0 0 @border-size 0;
}
