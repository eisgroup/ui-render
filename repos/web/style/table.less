@import "_mixins";

@table-color-border: @color-border;
@table-border: @border-size @border-style @table-color-border;
@table-border-radius: @radius-base;
@table-header-bg-color: @color-bg-grey-lightest;

table {
  border-spacing: 0; // remove spacing between tr rows

  &:not(.as-layout) {
    border: @table-border;
    border-radius: @table-border-radius;
    &:extend(.bg-neutral all); // style cell using table to allow styling tr background
  }

  .app__sort__icon {
    &:extend(.padding-smaller all);
    &:extend(.padding-right-small all);
  }

  &.striped {
    tr:nth-child(even) {
      background-color: fade(@color-neutral, 3%);
    }
  }

  thead > tr:first-child {
    th:first-child,
    th:first-child > * {
      border-top-left-radius: @table-border-radius;
    }

    th:last-child,
    th:last-child > * {
      border-top-right-radius: @table-border-radius;
    }
  }

  tbody > tr:last-child {
    > th,
    > td {
      border-bottom: none;
    }

    td:first-child,
    td:first-child > * {
      border-bottom-left-radius: @table-border-radius;
    }

    td:last-child,
    td:last-child > * {
      border-bottom-right-radius: @table-border-radius;
    }
  }

  th {
    &:extend(.bold);
  }

  &.no-header {
    &.vertical > tbody > tr > th {
      display: none;
    }
    > thead {
      display: none;
    }
  }

  &.highlight-1-last tbody > tr:last-child,
  &.highlight-2-last tbody > tr:nth-last-child(-n+2),
  &.highlight-3-last tbody > tr:nth-last-child(-n+3) {
    background-color: @color-table-lightest;
    font-weight: 500!important;
  }
}

table:not(.as-layout) {
  tr {
    @{select-interaction} {
      &:extend(.bg-primary-lightest all);

      > td,
      > td > * {
        &:extend(.bg-primary-lightest all);
      }
    }
  }

  th {
    background-color: @table-header-bg-color;
  }

  th, td {
    border-bottom: @table-border;
  }
}

// Minimise nested styling to allow easy config override
th, td {
  padding: 0; // remove cell spacing

  // Expand inside table row
  > .app__expand {
    > *:focus {
      &:extend(.no-outline);
    }
  }

  // Make empty Cell take full height to show border correctly
  > *:only-child:empty,
  > *:only-child > *:only-child:empty {
    &:before {
      content: 'A';
      visibility: hidden;
    }
  }
}

.ui.table {
  th > *:not(.button) {
    &:extend(.padding-v-smaller all);
    &:extend(.padding-left-small all);

    &:not(.sort) {
      &:extend(.padding-right-small all);
    }
  }

  td > *:not(.button) {
    &:extend(.padding-v-smaller all);
    &:extend(.padding-h-small all);
  }
}

.app__table__filters,
.app__table__options {
  > * {
    &:extend(.margin all);
  }
}
