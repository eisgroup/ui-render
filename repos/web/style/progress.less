@import "_mixins";

@progress-transition-speed: @speed-slow;
@progress-animation-delay: @progress-transition-speed * 1.1;
@progress-colors: violet, pink, red;
@progress-color: @color-primary; // default
@progress-color-inverse: @color-primary-light; // default

// =============================================================================
// BAR
// =============================================================================
@progress-bar-height: size(20);
@progress-bar-tooltip-size: @size-smaller;
@progress-bar-tooltip-line-height: size(7);
@progress-bar-tooltip-offset: @progress-bar-tooltip-size * 2 + @progress-bar-tooltip-line-height; // for tooltip
@progress-bar-radius: @radius-base;

/* Progress Bar Outline (and fill for gradient style) */
.app__progress--bar__wrapper {
  width: 100%;
  height: @progress-bar-height;
  border: @border @progress-color;
  border-radius: @progress-bar-radius;

  * {
    -webkit-backface-visibility: visible; // fix tooltip edge clipping
  }

  .inverted & {
    border-color: @progress-color-inverse;
  }

  .colors(@property: border-color; @colors: @progress-colors; @suffix: '-light';
    @preSelector: ~'.inverted .app__progress--bar.'; @postSelector: ~'&';);
}

/* Progress Bar Fill (for solid color) */
.app__progress__bar {
  justify-content: center;
  height: 100%;
  background-color: @progress-color;
  border-color: inherit; // not used, but needed for tooltip inside
  transition: width @progress-transition-speed;
  border-radius: inherit;

  .text {
    &:extend(.text-shadow all);
    &:extend(.text.smaller all);
    &:extend(.margin-h-smaller all);
    color: @color-white;
    text-align: right;
  }

  .inverted & {
    background-color: @progress-color-inverse;
  }

  .colors(@property: background-color; @colors: @progress-colors; @suffix: '-light';
    @preSelector: ~'.inverted .app__progress--bar.'; @postSelector: ~'&';);

  .app__progress--bar.gradient & {
    &:after {
      .object();
      &:extend(.position-fill all);
      &:extend(.bg-gradient--right all);
      border-radius: inherit;
    }
  }
}

.app__progress__bar__tooltip {
  &:extend(.no-wrap all);
  animation-delay: @progress-animation-delay;
  position: absolute;
  right: 1px;
  bottom: calc(100% + @progress-bar-tooltip-line-height + @border-size);
  font-size: @progress-bar-tooltip-size;
  border-color: inherit;

  .app__progress--bar.gradient & {
    border-color: @progress-color;

    .inverted & {
      border-color: @progress-color-inverse;
    }
  }

  .app__progress__bar__tooltip__inner {
    &:extend(.bg-blur all);
    .scalePadding(@size: @progress-bar-tooltip-size, @top: 0.25, @left: 0.6);
    border: @border;
    border-color: inherit;
    border-radius: @progress-bar-radius;

    @{select-icon} {
      font-size: @size-icon-small;
    }
  }
}

// =============================================================================
// CIRCLE
// =============================================================================
@progress-circle-thickness: 10;

.app__progress--circle {
  &.round {
    .recharts-radial-bar-sector {
      stroke-linejoin: round;
    }
  }

  .recharts-radial-bar-sector {
    stroke-width: size(@progress-circle-thickness);
  }
}

.app__progress--circle__inner {
  @size: calc(100% - size(@progress-circle-thickness + 20));
  .circle(@size);
  position: absolute;
  border: size(1) @border-style;
}

// =============================================================================
// STEPS
// =============================================================================
@progress-steps-line-height: size(3);
@progress-steps-border-size: size(2);
@progress-steps-button-size: @size-small;
@progress-steps-connector-color: @color-text-grey;
@progress-steps-connector-color-faded: fade(@color-text-grey, 50%);
@progress-steps-connector-color-passed: @color-primary-light;
@progress-steps-connector-color-passed-faded: fade(@progress-steps-connector-color-passed, 50%);

.app__progress--steps {

  align-items: center;

  &.connector { // vertical connect from step number
    @size: @margin-large;
    padding-bottom: @size;

    .app__progress__step {
      // Vertical connector
      &:before {
        .object();
        position: absolute;
        top: calc(100%);
        left: calc(50% - @progress-steps-border-size / 2);
        height: @size;
        width: @progress-steps-border-size;
        background-image: linear-gradient(180deg, @progress-steps-connector-color, @progress-steps-connector-color-faded);
      }

      &.passed:before,
      &.done:not(.passed):before {
        background-image: linear-gradient(180deg, @progress-steps-connector-color-passed, @progress-steps-connector-color-passed-faded);
      }

      &.done:not(.passed):before {
        &:extend(.fade all);
      }
    }
  }

  .app__progress__step {
    &.labeled {
      padding-bottom: @progress-steps-button-size + @padding-base;
    }

    &:not(.error) {
      .button {
        .inverted & {
          &:extend(.button.grey all);
        }
      }

      &.passed, &.done {
        .button {
          &:extend(.button.primary all);
        }
      }

      .button {
        @{select-interaction} {
          &:extend(.button.primary all);
        }
      }
    }
  }

  .button {
    &:extend(.no-outline all);
    line-height: 1;
    box-sizing: content-box;
    border-width: @progress-steps-border-size;

    @{select-icon} {
      &:before {
        opacity: 1;
      }
    }
  }

  .app__progress--bar {
    padding-top: @progress-steps-button-size - @progress-steps-line-height;
    flex: 1;

    .app__progress--bar__wrapper {
      background-color: @color-bg-grey;
      border: transparent;
      height: @progress-steps-line-height;
    }
  }
}
